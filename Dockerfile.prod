# Production Dockerfile for Battery Hawk
# Multi-stage build optimized for production deployment

FROM python:3.13-slim AS builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install Poetry
RUN pip install --no-cache-dir poetry

# Configure Poetry for production
ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_CREATE=true \
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    POETRY_CACHE_DIR='/tmp/poetry_cache' \
    PATH="/app/.venv/bin:$PATH"

# Copy dependency files
COPY pyproject.toml poetry.lock README.md /app/

# Install dependencies (production only, no dev dependencies)
RUN poetry install --only=main --no-root && rm -rf $POETRY_CACHE_DIR

# Production runtime stage
FROM python:3.13-slim AS runtime

WORKDIR /app

# Create non-root user and group
ENV USER=batteryhawk \
    USER_ID=1001 \
    GROUP=batteryhawk \
    GROUP_ID=1001

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    gosu \
    procps \
    curl \
    bluetooth \
    bluez \
    dbus \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create user and directories
RUN groupadd --gid "${GROUP_ID}" "${GROUP}" && \
    useradd \
        --uid "${USER_ID}" \
        --gid "${GROUP}" \
        --create-home \
        --home-dir /home/${USER} \
        --shell /bin/bash \
        "${USER}" && \
    mkdir -p /config /data /logs /app && \
    chown -R "${USER}":"${GROUP}" /config /data /logs /app

# Copy virtual environment from builder
COPY --from=builder --chown=${USER}:${GROUP} /app/.venv /app/.venv

# Copy application code
COPY --chown=${USER}:${GROUP} src/battery_hawk /app/battery_hawk
COPY --chown=${USER}:${GROUP} src/battery_hawk_driver /app/battery_hawk_driver
COPY --chown=${USER}:${GROUP} run_scripts /app/run_scripts
COPY --chown=${USER}:${GROUP} utils /app/utils

# Set environment variables
ENV VIRTUAL_ENV=/app/.venv \
    PATH="/app/.venv/bin:$PATH" \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH=/app \
    LOGFILE=/logs/battery_hawk.log

# Security: Run as non-root user
USER ${USER}

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:5000/api/health || exit 1

# Expose API port
EXPOSE 5000

# Use exec form for better signal handling
ENTRYPOINT ["/app/run_scripts/start_module.sh"]
CMD ["python", "-m", "battery_hawk"]

# Labels for metadata
LABEL maintainer="Battery Hawk Team" \
      version="1.0" \
      description="Battery Hawk - BLE Battery Monitor" \
      org.opencontainers.image.source="https://github.com/UpDryTwist/battery-hawk" \
      org.opencontainers.image.documentation="https://github.com/UpDryTwist/battery-hawk/blob/main/README.md" \
      org.opencontainers.image.licenses="MIT"
