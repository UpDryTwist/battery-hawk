[tool.poetry]
name = "Battery Hawk"
version = "0.0.1-dev31"
description = "Battery Hawk is to use BM* (starting with BM6) BLE battery monitors to monitor batteries in cars and boats, and integrate with alerts as appropriate."
authors = ["UpDryTwist <tathamg@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/UpDryTwist/battery-hawk"
documentation = "https://battery-hawk.readthedocs.io/en/latest/"
keywords = ["battery_hawk"]
homepage = "https://github.com/UpDryTwist/battery-hawk"
packages = [ { include = "battery_hawk", from = "src" } ]

[tool.poetry.scripts]
battery-hawk = "battery_hawk.cli:main"

[tool.ruff]
line-length = 100
target-version = "py312"
exclude = ["examples/"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812",  # Trailing comma missing
    "ISC001",  # Implicitly concatenated string literals on one line
]

[tool.ruff.lint.per-file-ignores]
"examples/*.py" = [
    "A", "ANN", "ARG", "B", "BLE", "C", "COM", "D", "DJ", "DTZ", "E", "EM", "ERA", "EXE", "F", "FA", "FBT", "FIX", "FLY", "G", "I", "ICN", "INP", "INT", "ISC", "N", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "Q", "RET", "RSE", "RUF", "S", "SIM", "SLF", "SLOT", "T", "TCH", "TD", "TID", "TRY", "UP", "W", "YTT"
]
"tests/*.py" = [
    "S101",    # Use of assert detected
    "S603",    # subprocess call: check for execution of untrusted input
    "S108",    # Probable insecure usage of temporary file or directory
    "ANN",     # All annotation rules - tests don't need strict typing
    "D",       # All docstring rules - tests don't need comprehensive docs
    "PLR2004", # Magic value used in comparison
    "PLR0915", # Too many statements
    "BLE001",  # Do not catch blind exception
    "SLF001",  # Private member accessed (common in tests)
    "PLC0415", # import should be at the top-level of a file
]

[tool.bandit]
exclude_dirs = ["tests", "docs", "examples", ".venv", "dist", ".ruff_cache", ".github"]

[tool.creosote]
venvs = [".venv"]
paths = ["src", "tests", "utils"]
deps-file = "pyproject.toml"
sections = ["tool.poetry.dependencies"]

[tool.codespell]
ignore-words-list = "Battery Hawk"
uri-ignore-words-list = "Classess"
skip = "pyproject.toml,build,dist,.venv,.git,*.png,*.jpg,*.jpeg,*.gif,*.bmp,*.ico,*.svg,*.pyc,*.pyo,*.pyd,*.so,*.dll,*.dylib,*.exe,*.bin,*.hex,*.obj,*.o,*.a,*.lib,*.dll.a,*.db,*.sqlite,*.sqlite3"

[tool.isort]
profile = "black"

[tool.pyright]
venv = ".venv"
venvPath = "."
pythonVersion = "3.12"
extraPaths = ["src", "tests"]
# TODO: fix for earlier Python versions
# Include this if you're feeling you have too much time on your hands
# typeCheckingMode = "strict"

# Ignore mock-related attribute access issues in test files
[[tool.pyright.executionEnvironments]]
root = "tests"
extraPaths = ["../src", "."]
reportAttributeAccessIssue = "none"

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
bleak = "^1.0.1"
cryptography = "^42.0.0"
flask = "^3.1.1"
flask-cors = "^6.0.1"
influxdb-client = "^1.49.0"
pydantic = "^2.11.7"
pydantic-settings = "^2.10.1"
updrytwist-updrytwist = "^0.0.42"
aiomqtt = "^2.0.0"
watchdog = "^6.0.0"
jsonschema = "^4.24.0"
flask-marshmallow = "^1.3.0"
flasgger = "^0.9.7.1"
flask-limiter = "^3.12"
influxdb = "^5.3.2"
requests = "^2.32.5"
psutil = "^7.0.0"
aiofiles = "^24.1.0"

[tool.poetry.group.dev.dependencies]
poetry = "^1.7.1"
pytest = ">=7.4.3,<9.0.0"
pre-commit = "^4.0.1"
ruff = "^0.8.0"
black = "^24.10.0"
make = "^0.1.6.post2"
codespell = "^2.2.6"
sphinx = ">=7.2.6,<9.0.0"
sphinx-rtd-theme = "^3.0.2"
pyright = "^1.1.390"
pytest-cov = "^6.0.0"
bump-my-version = "^0.33.0"
copier = "^9.5.0"
pytest-asyncio = "^1.0.0"

[tool.pytest.ini_options]
testpaths = ["tests"]
norecursedirs = ["local-instance", "dist", "htmlcov", ".git", ".venv", "node_modules"]
filterwarnings = [
  # Third-party deprecations we don't control
  'ignore:datetime\.datetime\.utcfromtimestamp\(\) is deprecated:DeprecationWarning',
  # Watchdog sometimes hits inotify limits in CI; we don't need thread tracebacks as warnings
  'ignore:Exception in thread .*inotify instance limit reached:pytest.PytestUnhandledThreadExceptionWarning',
  # Flask/asyncio loop access in test context may emit deprecation; we've updated code but filter residuals
  'ignore:There is no current event loop:DeprecationWarning',
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
